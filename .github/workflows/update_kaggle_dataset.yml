name: Update Kaggle Dataset

on:
  push:
    branches:
      - master
      - feature/add-groq-llm-model
    paths-ignore:
      - 'chat-langchain/**'
  pull_request:
    branches:
      - master
      - feature/add-groq-llm-model
    paths-ignore:
      - 'chat-langchain/**'

jobs:
  update-dataset:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        shell: pwsh
        run: |
          (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
          $oldPath = [Environment]::GetEnvironmentVariable("Path", "User")
          $newPath = $oldPath + ";" + "$env:USERPROFILE\.poetry\bin"
          [Environment]::SetEnvironmentVariable("Path", $newPath, "User")
          $env:Path = $newPath  # Update the path for the current process

      - name: Set up virtual environment and install dependencies
        run: |
          if ($null -ne $env:VIRTUAL_ENV) {
            Write-Host "Virtual environment is activated."
          } else {
            Write-Host "Virtual environment is not activated. Activating virtual environment..."
            # Hardcoded path to your virtual environment
            $venvPath = "C:\Users\roger\Github\chat-langchain\chat-langchain\Scripts\Activate.ps1"
            & $venvPath
          }
        shell: pwsh
        
      - name: Install dependencies with Poetry
        run: poetry install

      - name: Update lock file
        run: poetry lock --no-update

      - name: Install Kaggle API
        run: pip install kaggle

      - name: Configure Kaggle API credentials
        run: |
          mkdir -p ~/.kaggle
          echo '{"username":"${{ secrets.KAGGLE_USERNAME }}","key":"${{ secrets.KAGGLE_KEY }}"}' > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Create dataset metadata
        run: |
          echo '{
            "title": "chat-langchain forked github repository",
            "id": "rogermt/chat-langchain-repo",
            "licenses": [
              {
                "name": "CC0-1.0"
              }
            ]
          }' > dataset-metadata.json

      - name: Zip the dataset
        shell: pwsh
        run: |
          if (Test-Path ../chat-langchain-repo.zip) { Remove-Item ../chat-langchain-repo.zip }
          $filesToZip = Get-ChildItem -Recurse -File | Where-Object { $_.FullName -notmatch "\.env$" }
          Compress-Archive -Path $filesToZip.FullName -DestinationPath ../chat-langchain-repo.zip -Force


      - name: Check if dataset exists and create if not
        run: |
          kaggle datasets create -p . || echo "Dataset already exists, continuing to update."

      - name: Update Kaggle Dataset
        run: kaggle datasets version -p . --dir-mode zip -m "Updated dataset with new changes"